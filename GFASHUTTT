local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = game:GetService("Workspace").CurrentCamera
local Lighting = game:GetService("Lighting")

-- Optimize Lighting for FPS boost
Lighting.GlobalShadows = false
Lighting.FogEnd = 100000
Lighting.Brightness = 2
Lighting.OutdoorAmbient = Color3.new(1, 1, 1)

local spreadFactor = 0 -- Recoil spread factor
local botNames = {} -- Store bot names

-- Function to detect bots and assign names
local function detectAndAssignBot(player)
    if not player then return end

    if not botNames[player] then
        botNames[player] = player.Name -- Default to player name
    end

    if string.find(player.Name, "Bot") or string.find(player.Name, "AI") then
        botNames[player] = "AI-" .. tostring(math.random(1000, 9999))
        print("Detected bot: " .. botNames[player])
    end
end

-- Function to check if a player is an enemy
local function IsEnemy(player)
    return player.Team ~= LocalPlayer.Team
end

-- Function to create ESP on enemies
local function createESP(player)
    if not player or not player.Team then return end

    local function applyHighlight()
        if player.Character then
            local highlight = player.Character:FindFirstChild("Highlight")
            if not highlight then
                highlight = Instance.new("Highlight")
                highlight.Parent = player.Character
                highlight.Adornee = player.Character
                highlight.FillTransparency = 0.1
                highlight.OutlineTransparency = 0
                highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            end

            if player.Team ~= LocalPlayer.Team then
                local hue = 0
                RunService.RenderStepped:Connect(function()
                    if player and player.Character and highlight then
                        hue = (hue + 10) % 360
                        highlight.FillColor = Color3.fromHSV(hue / 360, 1, 1)
                        highlight.OutlineColor = Color3.fromHSV(hue / 360, 1, 1)
                    end
                end)
            else
                highlight.FillColor = Color3.new(1, 1, 1)
                highlight.OutlineColor = Color3.new(1, 1, 1)
            end
        end
    end

    applyHighlight()
    player.CharacterAdded:Connect(function()
        task.wait(0.1)
        applyHighlight()
    end)
end

-- Function to find the closest enemy
local function getClosestEnemy()
    local closestEnemy = nil
    local shortestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Team ~= LocalPlayer.Team and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local enemyPosition = Camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
            local distance = (Vector2.new(enemyPosition.X, enemyPosition.Y) - UserInputService:GetMouseLocation()).Magnitude

            if distance < shortestDistance then
                shortestDistance = distance
                closestEnemy = player
            end
        end
    end
    return closestEnemy
end

-- Function to aim at the target with recoil spread
local function aimAtTarget()
    local target = getClosestEnemy()
    if target and target.Character and target.Character:FindFirstChild("Head") then
        local aimPosition = target.Character.Head.Position
        local direction = (aimPosition - Camera.CFrame.Position).unit

        -- Simulate recoil spread
        spreadFactor = math.min(spreadFactor + 0.02, 0.1)

        -- Apply spread
        direction = direction + Vector3.new(
            (math.random() - 0.5) * spreadFactor,
            (math.random() - 0.5) * spreadFactor,
            (math.random() - 0.5) * spreadFactor
        )

        -- Adjust Camera aim
        Camera.CFrame = CFrame.new(Camera.CFrame.Position, Camera.CFrame.Position + direction)
        print("Aiming at: " .. botNames[target] or target.Name .. " with spread: " .. spreadFactor)

        -- Reset spread gradually
        task.delay(0.5, function()
            spreadFactor = math.max(spreadFactor - 0.02, 0)
        end)
    end
end

-- Function to handle user input for aiming
local function onInputBegan(input, gameProcessed)
    if gameProcessed then return end
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        print("Mouse clicked, aiming at enemy.")
        aimAtTarget()
    end
end

-- Function to create an ESP Box
local function CreateESPBox()
    local Box = Drawing.new("Square")
    Box.Color = Color3.fromRGB(255, 0, 0) -- Red Box
    Box.Thickness = 2
    Box.Transparency = 1
    Box.Visible = false
    return Box
end

-- Function to create an ESP Line
local function CreateESPLine()
    local Line = Drawing.new("Line")
    Line.Color = Color3.fromRGB(255, 0, 0) -- Red Line
    Line.Thickness = 2
    Line.Transparency = 1
    Line.Visible = false
    return Line
end

-- Store ESP Boxes and Lines for each enemy
local ESP_Boxes = {}
local ESP_Lines = {}

UserInputService.InputBegan:Connect(onInputBegan)

-- Function to manage player additions
local function onPlayerAdded(player)
    print("Player added: " .. player.Name)
    detectAndAssignBot(player)
    
    player:GetPropertyChangedSignal("Team"):Connect(function()
        createESP(player)
    end)

    player.CharacterAdded:Connect(function()
        task.wait(0.1)
        createESP(player)
    end)

    createESP(player)
end

-- Apply to all current Players
for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        onPlayerAdded(player)
    end
end

Players.PlayerAdded:Connect(onPlayerAdded)
Players.PlayerRemoving:Connect(function(player)
    print("Player removed: " .. player.Name)
    botNames[player] = nil -- Remove bot name entry
    if player.Character then
        local highlight = player.Character:FindFirstChild("Highlight")
        if highlight then
            highlight:Destroy()
        end
    end
end)

-- Display health of enemies
RunService.RenderStepped:Connect(function()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Team ~= LocalPlayer.Team and player.Character and player.Character:FindFirstChild("Head") then
            local healthTag = player.Character.Head:FindFirstChild("HealthTag")
            if not healthTag then
                healthTag = Instance.new("BillboardGui")
                healthTag.Name = "HealthTag"
                healthTag.Size = UDim2.new(0, 50, 0, 25)
                healthTag.StudsOffset = Vector3.new(0, 2.5, 0)
                healthTag.Adornee = player.Character.Head
                healthTag.Parent = player.Character.Head
                healthTag.AlwaysOnTop = true
                healthTag.MaxDistance = 10000

                local textLabel = Instance.new("TextLabel", healthTag)
                textLabel.Size = UDim2.new(1, 0, 1, 0)
                textLabel.BackgroundTransparency = 1
                textLabel.TextScaled = true
                textLabel.TextColor3 = Color3.new(1, 0, 0)
                textLabel.Font = Enum.Font.SourceSansBold
                textLabel.Text = tostring(math.floor(player.Character.Humanoid.Health))
            else
                healthTag:FindFirstChild("TextLabel").Text = tostring(math.floor(player.Character.Humanoid.Health))
            end
        end
    end
end)

-- ESP Update Loop
RunService.RenderStepped:Connect(function()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and IsEnemy(player) then
            local Character = player.Character
            local Head = Character:FindFirstChild("Head")
            local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
            local Humanoid = Character:FindFirstChild("Humanoid")
            local MyCharacter = LocalPlayer.Character
            local MyHumanoidRootPart = MyCharacter and MyCharacter:FindFirstChild("HumanoidRootPart")

            if Head and HumanoidRootPart and Humanoid and MyHumanoidRootPart then
                local HeadPos, OnScreenHead = Camera:WorldToViewportPoint(Head.Position)
                local RootPos, OnScreenRoot = Camera:WorldToViewportPoint(HumanoidRootPart.Position)
                local MyPos, OnScreenMe = Camera:WorldToViewportPoint(MyHumanoidRootPart.Position)

                -- Create or get ESP Box
                if not ESP_Boxes[player] then
                    ESP_Boxes[player] = CreateESPBox()
                end
                local Box = ESP_Boxes[player]

                -- Create or get ESP Line
                if not ESP_Lines[player] then
                    ESP_Lines[player] = CreateESPLine()
                end
                local Line = ESP_Lines[player]

                if OnScreenHead and OnScreenRoot and OnScreenMe then
                    -- Set Box Size
                    local BoxHeight = math.abs(HeadPos.Y - RootPos.Y)
                    local BoxWidth = BoxHeight / 1.5
                    Box.Size = Vector2.new(BoxWidth, BoxHeight)
                    Box.Position = Vector2.new(HeadPos.X - BoxWidth / 2, HeadPos.Y)
                    Box.Visible = true

                    -- Set ESP Line
                    Line.From = Vector2.new(MyPos.X, MyPos.Y) -- Start from player's position
                    Line.To = Vector2.new(RootPos.X, RootPos.Y) -- End at enemy's root position
                    Line.Visible = true
                else
                    Box.Visible = false
                    Line.Visible = false
                end
            end
        elseif ESP_Boxes[player] and ESP_Lines[player] then
            ESP_Boxes[player].Visible = false
            ESP_Lines[player].Visible = false
        end
    end
end)

-- Cleanup on player removal
Players.PlayerRemoving:Connect(function(player)
    if ESP_Boxes[player] then
        ESP_Boxes[player]:Remove()
        ESP_Boxes[player] = nil
    end
    if ESP_Lines[player] then
        ESP_Lines[player]:Remove()
        ESP_Lines[player] = nil
    end
end)

-- Tool Glow Effect Loop
task.spawn(function()
    while true do
        task.wait(0.1)
        if LocalPlayer.Character then
            local tool = LocalPlayer.Character:FindFirstChildOfClass("Tool")
            if tool then
                local highlight = tool:FindFirstChild("Highlight")
                if not highlight then
                    highlight = Instance.new("Highlight")
                    highlight.Parent = tool
                    highlight.Adornee = tool
                    highlight.FillTransparency = 0.1
                    highlight.OutlineTransparency = 0
                    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                end
                local hue = tick() % 1
                highlight.FillColor = Color3.fromHSV(hue, 1, 1)
                highlight.OutlineColor = Color3.fromHSV(hue, 1, 1)
            end
        end
    end
end)
